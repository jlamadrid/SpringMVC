<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!-- To avoid the following error
    http://stackoverflow.com/questions/5481879/error-using-spring-authorize-tag-to-check-to-see-if-user-is-logged-in
    -->
    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>

    <!--
    To avoid redirect to favicon.ico after authenticating.
    -->
    <security:http pattern="/favicon.ico" security="none" />

    <security:http auto-config="true">

        <security:intercept-url pattern="/customers" access="ROLE_ADMIN" />

        <!-- custom login form
        see AuthenticationController
        login-page                 : controller handler will redirect to login page.
        default-target-url         : default handler for success
        authentication-failure-url : default handler for failure
        -->
        <security:form-login
                login-page="/login"
                default-target-url="/contacts"
                authentication-failure-url="/loginfailed"
        />

        <!--
           redirect on logout to home page (HomeController)
        -->
        <security:logout logout-success-url="/" />

    </security:http>

    <!--  In memory
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user authorities="ROLE_ADMIN" name="admin" password="admin" />
                <security:user authorities="ROLE_USER" name="user" password="user" />
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
    -->

    <!-- Database provided authentication
    http://my.safaribooksonline.com/book/programming/java/9781430248187/chapter-6-configuring-alternative-authentication-providers/sec1_9781430248187_ch06_xhtml
    -->
    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        group-authorities-by-username-query="select g.id, g.group_name, ga.authority
                  from groups g, group_members gm, group_authorities ga
                  where gm.username = ? and g.id= ga.group_id and g.id= gm.group_id"
            />
        </security:authentication-provider>
    </security:authentication-manager>

</beans>